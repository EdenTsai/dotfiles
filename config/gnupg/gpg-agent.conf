# GnuPG Agent Configuration.
#
# Frequently Asked Questions:
#
# - How to manually restart GPG agent?
#
#     ```shell
#     gpgconf --kill "gpg-agent"
#     ```
#
# - How to force GPG agent to forget passwords?
#
#     ```shell
#     gpgconf --reload "gpg-agent"
#     ```
#
# - How to fixes th following error
#   when signing Git commits with GPG:
#
#     ```shell
#     git commit --message "demo"
#     # error: gpg failed to sign the data
#     # fatal: failed to write commit object
#
#     export GPG_TTY="$(tty)"
#     git commit --message "demo"
#     ```
#
# @link https://www.gnupg.org/documentation/manuals/gnupg/Agent-Options.html
# @link https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html
# @link https://wiki.archlinux.org/index.php/GnuPG

#######################################################################
# GnuPG Agent
#######################################################################

# Set the time a cache entry is valid to specific seconds.
#
# - Each time a cache entry is accessed,
#   the entry’s timer is reset.
# - Default: 600 seconds.
default-cache-ttl 7200

# Set the maximum time a cache entry is valid to specific seconds.
#
# - After this time a cache entry will be expired
#   even if it has been accessed recently
#   or has been set using `gpg-preset-passphrase`.
# - Default: 7200 seconds.
# - Example: 604800 seconds for 7 days.
max-cache-ttl 604800

# Set the time a cache entry used for SSH keys
# is valid to specific seconds.
#
# - Each time a cache entry is accessed,
#   the entry’s timer is reset.
# - Default: 1800 seconds.
default-cache-ttl-ssh 7200

# Set the maximum time a cache entry used for SSH keys
# is valid to specific seconds.
#
# - Default: 7200 seconds.
# - Example: 604800 seconds for 7 days.
max-cache-ttl-ssh 604800

# The OpenSSH Agent protocol is always enabled,
# but `gpg-agent` will only set the `$SSH_AUTH_SOCK` variable
# if this flag is given.
enable-ssh-support

# Since GnuPG 2.1 the standard socket is always used.
#
# - These options have no more effect.
# - The command `gpg-agent --use-standard-socket-p`
#   will thus always return success.
use-standard-socket

# Append all logging output to file.
#
# - This is very helpful in seeing what the agent actually does.
## log-file "~/.cache/gnupg/gpg-agent.log"

#######################################################################
# Pinentry
#######################################################################

# Use program filename as the PIN entry.
#
# - Use `/usr/local/bin/pinentry-curses` with Homebrew on macOS.
## pinentry-program /usr/local/bin/pinentry-curses

# This option asks the Pinentry to timeout
# after specific seconds with no user input.
## pinentry-timeout 60

# Tell Pinentry to allow features to divert the passphrase entry
# to a running Emacs instance.
#
# - How this is exactly handled
#   depends on the version of the used Pinentry.
## allow-emacs-pinentry

# Allow clients to use the loopback pinentry features.
#
# - See the option pinentry-mode for details.
## allow-loopback-pinentry
