#!/usr/bin/env bash

# Bash Configuration.
#
# @link https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html
# @link https://www.gnu.org/software/bash/manual/html_node/Bash-Variables.html

# Return if not running interactive bash.
if [[ "${BASH_VERSION:-}" == "" ]] || [[ "${PS1:-}" == "" ]]; then
  return
fi

#######################################################################
# Configure Bash variables.
#
# Globals:
#   LC_ALL
#   LANG
# Arguments:
#   None
#######################################################################
function bashrc::configure()
{
  # Used to determine the locale category for any category
  # not specifically selected with a variable starting with LC_.
  export LANG="en_US.UTF-8"

  # This variable overrides the value of LANG
  # and any other LC_ variable specifying a locale category.
  export LC_ALL="en_US.UTF-8"
}

#######################################################################
# Configure XDG base direcories in Bash.
#
# Globals:
#   HOME
#   XDG_CONFIG_HOME
# Arguments:
#   None
#
# @link https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
#######################################################################
function bashrc::configure_base_directories()
{
  # $XDG_CONFIG_HOME defines the base directory relative to
  # which user specific configuration files should be stored.
  #
  # - If $XDG_CONFIG_HOME is either not set or empty,
  #   a default equal to `$HOME/.config` should be used.
  if [[ "${XDG_CONFIG_HOME:-}" == "" ]]; then
    export XDG_CONFIG_HOME="${HOME}/.config"
  fi
}

function bashrc::main()
{
  bashrc::configure
  bashrc::configure_base_directories

  local bash_config_home="${HOME}/.config/bash"
  if [[ "${XDG_CONFIG_HOME:-}" != "" ]]; then
    bash_config_home="${XDG_CONFIG_HOME}/bash"
  fi

  # Source the bashrc files in order.
  local ordered_bashrc_files=( \
    "${bash_config_home}/bashrc.d/bash-prompts.bashrc" \
  )

  local bashrc_file
  for bashrc_file in "${ordered_bashrc_files[@]}"; do
    if test -f "${bashrc_file}"; then
      source "${bashrc_file}"
    fi
  done

  # Source the bashrc files for localhost only.
  if test -f "${bashrc_file}"; then
    source "${bash_config_home}/local.bashrc"
  fi
}

bashrc::main

unset -f bashrc::main
unset -f bashrc::configure
unset -f bashrc::configure_base_directories
